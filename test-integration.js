// Teste de integra√ß√£o com Supabase - WordWise App
// Execute este arquivo com: node test-integration.js

const { createClient } = require('@supabase/supabase-js');

// Configurar Supabase (usando vari√°veis de ambiente ou valores diretos)
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://seu-projeto.supabase.co';
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || 'sua-chave-anonima-aqui';

if (!supabaseUrl || !supabaseAnonKey || supabaseUrl.includes('seu-projeto') || supabaseAnonKey.includes('sua-chave')) {
  console.error('‚ùå Configure as vari√°veis de ambiente VITE_SUPABASE_URL e VITE_SUPABASE_ANON_KEY');
  console.log('üìù Crie um arquivo .env com:');
  console.log('VITE_SUPABASE_URL=https://seu-projeto.supabase.co');
  console.log('VITE_SUPABASE_ANON_KEY=sua-chave-anonima-aqui');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testSupabaseIntegration() {
  console.log('üöÄ Testando integra√ß√£o com Supabase...\n');

  try {
    // 1. Testar conex√£o b√°sica
    console.log('1. Testando conex√£o b√°sica...');
    const { data: healthCheck, error: healthError } = await supabase
      .from('configuracoes')
      .select('*')
      .limit(1);
    
    if (healthError) {
      console.error('‚ùå Erro na conex√£o:', healthError.message);
      return;
    }
    console.log('‚úÖ Conex√£o estabelecida com sucesso');

    // 2. Testar inser√ß√£o de uma atividade
    console.log('\n2. Testando cria√ß√£o de atividade...');
    const novaAtividade = {
      titulo: 'Teste de Integra√ß√£o - Prova de Ingl√™s',
      descricao: 'Prova criada automaticamente para testar a integra√ß√£o',
      instrucoes: 'Esta √© uma prova de teste gerada pelo sistema',
      tipo: 'prova',
      data_inicio: new Date().toISOString(),
      data_fim: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(), // 30 dias
      valor_maximo: 10.0,
      status: 'ativa'
    };

    const { data: atividade, error: atividadeError } = await supabase
      .from('atividades')
      .insert(novaAtividade)
      .select()
      .single();

    if (atividadeError) {
      console.error('‚ùå Erro ao criar atividade:', atividadeError.message);
      return;
    }
    console.log('‚úÖ Atividade criada:', atividade.titulo);

    // 3. Testar cria√ß√£o de quest√µes
    console.log('\n3. Testando cria√ß√£o de quest√µes...');
    const questoes = [
      {
        atividade_id: atividade.id,
        enunciado: 'What is the correct form of the verb "to be" for "I"?',
        tipo: 'multipla_escolha',
        opcoes: { options: ['am', 'is', 'are', 'be'] },
        resposta_correta: 'am',
        valor: 2.5,
        ordem: 1
      },
      {
        atividade_id: atividade.id,
        enunciado: 'Complete: She ___ a teacher.',
        tipo: 'dissertativa',
        resposta_correta: 'is',
        valor: 2.5,
        ordem: 2
      }
    ];

    const { data: questoesCriadas, error: questoesError } = await supabase
      .from('questoes')
      .insert(questoes)
      .select();

    if (questoesError) {
      console.error('‚ùå Erro ao criar quest√µes:', questoesError.message);
      return;
    }
    console.log(`‚úÖ ${questoesCriadas.length} quest√µes criadas`);

    // 4. Testar busca de dados
    console.log('\n4. Testando busca de atividades...');
    const { data: atividades, error: buscaError } = await supabase
      .from('atividades')
      .select(`
        *,
        questoes (*)
      `)
      .order('created_at', { ascending: false })
      .limit(5);

    if (buscaError) {
      console.error('‚ùå Erro na busca:', buscaError.message);
      return;
    }
    console.log(`‚úÖ ${atividades.length} atividades encontradas`);

    // 5. Limpar dados de teste
    console.log('\n5. Limpando dados de teste...');
    const { error: deleteError } = await supabase
      .from('atividades')
      .delete()
      .eq('id', atividade.id);

    if (deleteError) {
      console.error('‚ùå Erro ao limpar dados:', deleteError.message);
      return;
    }
    console.log('‚úÖ Dados de teste removidos');

    console.log('\nüéâ Integra√ß√£o com Supabase funcionando perfeitamente!');
    console.log('\nüìã Resumo da integra√ß√£o:');
    console.log('   ‚úÖ Conex√£o estabelecida');
    console.log('   ‚úÖ Cria√ß√£o de atividades');
    console.log('   ‚úÖ Cria√ß√£o de quest√µes');
    console.log('   ‚úÖ Busca de dados');
    console.log('   ‚úÖ Remo√ß√£o de dados');
    console.log('\nüöÄ O WordWise App est√° pronto para usar o Supabase!');

  } catch (error) {
    console.error('‚ùå Erro inesperado:', error.message);
    console.log('\nüîß Verifique:');
    console.log('   1. Se as tabelas foram criadas no Supabase');
    console.log('   2. Se as vari√°veis de ambiente est√£o corretas');
    console.log('   3. Se as pol√≠ticas RLS est√£o configuradas');
  }
}

// Executar teste
testSupabaseIntegration();
